# Get the data
python get_public_data.py

# Training a model, generating results, analyzing results
1) Train a model on a given dataset (DRIVE); this will store the model in experiments/wnet_drive
python train_cyclical.py --csv_train data/DRIVE/train.csv --cycle_lens 20/50 --model_name wnet --save_path wnet_drive --device cuda:0
python train_cyclical.py --csv_train data/CHASEDB/train.csv --cycle_lens 40/50 --model_name wnet --save_path wnet_chasedb --device cuda:0
python train_cyclical.py --csv_train data/HRF/train.csv --cycle_lens 30/50 --model_name wnet --save_path wnet_hrf_1024 --im_size 1024 --batch_size 2 --grad_acc_steps 1 --device cuda:0

2) Generate results from that model on different datasets
python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset DRIVE --device cuda:0
python generate_results.py --config_file experiments/wnet_chasedb/config.cfg --dataset CHASEDB --device cuda:0
python generate_results.py --config_file experiments/wnet_hrf_1024/config.cfg --dataset HRF --im_size 1024 --device cuda:0

3) Analyze those results:
python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive --path_test_preds results/DRIVE/experiments/wnet_drive --train_dataset DRIVE --test_dataset DRIVE

python analyze_results.py --path_train_preds results/CHASEDB/experiments/wnet_chasedb --path_test_preds results/CHASEDB/experiments/wnet_chasedb --train_dataset CHASEDB --test_dataset CHASEDB

python analyze_results.py --path_train_preds results/HRF/experiments/unet_hrf_1024 --path_test_preds results/HRF/experiments/unet_hrf_1024 --train_dataset HRF --test_dataset HRF

# Cross-Dataset experiments
1) Cross-dataset experiments: result generation
python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset CHASEDB --device cuda:0
python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset HRF --device cuda:0
python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset STARE --device cuda:0
python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset LES-AV --device cuda:0
python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset DR-HAGIS --device cuda:0
python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset AV-WIDE --device cuda:0

# if you have these:
python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset IOSTAR --device cuda:0
python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset DRIDB --device cuda:0
python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset AUCKLAND_0 --device cuda:0
python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset AUCKLAND_50 --device cuda:0
python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset AUCKLAND_100 --device cuda:0
python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset AUCKLAND_150 --device cuda:0

2) Cross-dataset experiments: result analysis
python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive --path_test_preds results/CHASEDB/experiments/wnet_drive --train_dataset DRIVE --test_dataset CHASEDB

python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive --path_test_preds results/HRF/experiments/wnet_drive --train_dataset DRIVE --test_dataset HRF

python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive --path_test_preds results/STARE/experiments/wnet_drive --train_dataset DRIVE --test_dataset STARE

python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive --path_test_preds results/LES-AV/experiments/wnet_drive --train_dataset DRIVE --test_dataset LES-AV

python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive --path_test_preds results/DR-HAGIS/experiments/wnet_drive --train_dataset DRIVE --test_dataset DR-HAGIS

python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive --path_test_preds results/AV-WIDE/experiments/wnet_drive --train_dataset DRIVE --test_dataset AV-WIDE

# if you have these:
python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset IOSTAR --device cuda:0
python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive --path_test_preds results/IOSTAR/experiments/wnet_drive --train_dataset DRIVE --test_dataset IOSTAR

python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset DRIDB --device cuda:0
python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive --path_test_preds results/DRIDB/experiments/wnet_drive --train_dataset DRIVE --test_dataset DRIDB

python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset AUCKLAND_0 --device cuda:0
python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive --path_test_preds results/AUCKLAND_0/experiments/wnet_drive --train_dataset DRIVE --test_dataset AUCKLAND_0

python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset AUCKLAND_50 --device cuda:0
python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive --path_test_preds results/AUCKLAND_50/experiments/wnet_drive --train_dataset DRIVE --test_dataset AUCKLAND_50

python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset AUCKLAND_100 --device cuda:0
python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive --path_test_preds results/AUCKLAND_100/experiments/wnet_drive --train_dataset DRIVE --test_dataset AUCKLAND_100

python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset AUCKLAND_150 --device cuda:0
python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive --path_test_preds results/AUCKLAND_150/experiments/wnet_drive --train_dataset DRIVE --test_dataset AUCKLAND_150


# Self-Labeling Domain Adapatation Experiments:
1) Train a model on a source dataset (DRIVE); this will store the model in experiments/wnet_drive
python train_cyclical.py --save_path wnet_drive --device cuda:0

2) Generate predictions on target dataset (CHASEDB) with this model; this will store predictions at results/CHASEDB/experiments/wnet_drive
python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset CHASEDB --device cuda:0

3) Train a model on DRIVE manual segmentations plus CHASEDB pseudo-segmentations for one cycle of 10 epochs with a lower learning rate. This can be slow because of the AUC computation on a large set of images at the end of each cycle.
python train_cyclical.py --save_path wnet_drive_chasedb_pl --checkpoint_folder experiments/wnet_drive --csv_test data/CHASEDB/test_all.csv --device cuda:0 --path_test_preds results/CHASEDB/experiments/wnet_drive --max_lr 0.0001 --cycle_lens 10/1 --metric tr_auc

3) Generate predictions with this new model on source data DRIVE:
python generate_results.py --config_file experiments/wnet_drive_chasedb_pl/config.cfg --dataset DRIVE --device cuda:0

4) Generate predictions on target data CHASEDB:
	python generate_results.py --config_file experiments/wnet_drive_chasedb_pl/config.cfg --dataset CHASEDB --device cuda:0

5) Analyze results: we use DRIVE predictions to find optimal thresholding value:
python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive  --path_test_preds results/CHASEDB/experiments/wnet_drive_chasedb_pl --train_dataset DRIVE --test_dataset CHASEDB

- Generating pseudo-labels for all other datasets:
python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset HRF --device cuda:0

python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset STARE --device cuda:0

python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset LES-AV --device cuda:0

python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset DR-HAGIS --device cuda:0

python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset AV-WIDE --device cuda:0

python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset IOSTAR --device cuda:0

python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset DRIDB --device cuda:0

python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset AUCKLAND_0 --device cuda:0

python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset AUCKLAND_50 --device cuda:0

python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset AUCKLAND_100 --device cuda:0

python generate_results.py --config_file experiments/wnet_drive/config.cfg --dataset AUCKLAND_150 --device cuda:0


- Training on all other datasets with pseudo-labels:
python train_cyclical.py --save_path wnet_drive_chasedb_pl --checkpoint_folder experiments/wnet_drive --csv_test data/CHASEDB/test_all.csv --path_test_preds results/CHASEDB/experiments/wnet_drive --max_lr 0.0001 --cycle_lens 10/1 --metric tr_auc --device cuda:0

python train_cyclical.py --save_path wnet_drive_hrf_pl --checkpoint_folder experiments/wnet_drive --csv_test data/HRF/test_all.csv --path_test_preds results/HRF/experiments/wnet_drive --max_lr 0.0001 --cycle_lens 10/1 --metric tr_auc  --device cuda:0

python train_cyclical.py --save_path wnet_drive_stare_pl --checkpoint_folder experiments/wnet_drive --csv_test data/STARE/test_all.csv --path_test_preds results/STARE/experiments/wnet_drive --max_lr 0.0001 --cycle_lens 10/1 --metric tr_auc  --device cuda:0

python train_cyclical.py --save_path wnet_drive_les_av_pl --checkpoint_folder experiments/wnet_drive --csv_test data/LES-AV/test_all.csv --path_test_preds results/LES-AV/experiments/wnet_drive --max_lr 0.0001 --cycle_lens 10/1 --metric tr_auc  --device cuda:0

python train_cyclical.py --save_path wnet_drive_dr_hagis_pl --checkpoint_folder experiments/wnet_drive --csv_test data/DR-HAGIS/test_all.csv --path_test_preds results/DR-HAGIS/experiments/wnet_drive --max_lr 0.0001 --cycle_lens 10/1 --metric tr_auc --device cuda:0

python train_cyclical.py --save_path wnet_drive_av_wide_pl --checkpoint_folder experiments/wnet_drive --csv_test data/AV-WIDE/test_all.csv --path_test_preds results/AV-WIDE/experiments/wnet_drive --max_lr 0.0001 --cycle_lens 10/1 --metric tr_auc --device cuda:0

python train_cyclical.py --save_path wnet_drive_iostar_pl --checkpoint_folder experiments/wnet_drive --csv_test data/IOSTAR/test_all.csv --path_test_preds results/IOSTAR/experiments/wnet_drive --max_lr 0.0001 --cycle_lens 10/1 --metric tr_auc --device cuda:0

python train_cyclical.py --save_path wnet_drive_dridb_pl --checkpoint_folder experiments/wnet_drive --csv_test data/DRIDB/test_all.csv --path_test_preds results/DRIDB/experiments/wnet_drive --max_lr 0.0001 --cycle_lens 10/1 --metric tr_auc  --device cuda:0

python train_cyclical.py --save_path wnet_drive_auckland0_pl --checkpoint_folder experiments/wnet_drive --csv_test data/AUCKLAND_0/test_all.csv --path_test_preds results/AUCKLAND_0/experiments/wnet_drive --max_lr 0.0001 --cycle_lens 10/1 --metric tr_auc  --device cuda:0

python train_cyclical.py --save_path wnet_drive_auckland50_pl --checkpoint_folder experiments/wnet_drive --csv_test data/AUCKLAND_50/test_all.csv --path_test_preds results/AUCKLAND_50/experiments/wnet_drive --max_lr 0.0001 --cycle_lens 10/1 --metric tr_auc  --device cuda:0

python train_cyclical.py --save_path wnet_drive_auckland100_pl --checkpoint_folder experiments/wnet_drive --csv_test data/AUCKLAND_100/test_all.csv --path_test_preds results/AUCKLAND_100/experiments/wnet_drive --max_lr 0.0001 --cycle_lens 10/1 --metric tr_auc  --device cuda:0

python train_cyclical.py --save_path wnet_drive_auckland150_pl --checkpoint_folder experiments/wnet_drive --csv_test data/AUCKLAND_150/test_all.csv --path_test_preds results/AUCKLAND_150/experiments/wnet_drive --max_lr 0.0001 --cycle_lens 10/1 --metric tr_auc --device cuda:0

- Generating new predictions after training an all other datasets:

python generate_results.py --config_file experiments/wnet_drive_drive_pl/config.cfg --dataset DRIVE --device cuda:0

python generate_results.py --config_file experiments/wnet_drive_chasedb_pl/config.cfg --dataset DRIVE --device cuda:0
python generate_results.py --config_file experiments/wnet_drive_chasedb_pl/config.cfg --dataset CHASEDB --device cuda:0

python generate_results.py --config_file experiments/wnet_drive_hrf_pl/config.cfg --dataset DRIVE --device cuda:0
python generate_results.py --config_file experiments/wnet_drive_hrf_pl/config.cfg --dataset HRF --device cuda:0

python generate_results.py --config_file experiments/wnet_drive_stare_pl/config.cfg --dataset DRIVE --device cuda:0
python generate_results.py --config_file experiments/wnet_drive_stare_pl/config.cfg --dataset STARE --device cuda:0

python generate_results.py --config_file experiments/wnet_drive_les_av_pl/config.cfg --dataset DRIVE --device cuda:0
python generate_results.py --config_file experiments/wnet_drive_les_av_pl/config.cfg --dataset LES-AV --device cuda:0

python generate_results.py --config_file experiments/wnet_drive_dr_hagis_pl/config.cfg --dataset DRIVE --device cuda:0
python generate_results.py --config_file experiments/wnet_drive_dr_hagis_pl/config.cfg --dataset DR-HAGIS --device cuda:0

python generate_results.py --config_file experiments/wnet_drive_av_wide_pl/config.cfg --dataset DRIVE --device cuda:0
python generate_results.py --config_file experiments/wnet_drive_av_wide_pl/config.cfg --dataset AV-WIDE --device cuda:0

python generate_results.py --config_file experiments/wnet_drive_iostar_pl/config.cfg --dataset DRIVE --device cuda:0
python generate_results.py --config_file experiments/wnet_drive_iostar_pl/config.cfg --dataset IOSTAR --device cuda:0

python generate_results.py --config_file experiments/wnet_drive_dridb_pl/config.cfg --dataset DRIVE --device cuda:0
python generate_results.py --config_file experiments/wnet_drive_dridb_pl/config.cfg --dataset DRIDB --device cuda:0

python generate_results.py --config_file experiments/wnet_drive_auckland0_pl/config.cfg --dataset DRIVE --device cuda:0
python generate_results.py --config_file experiments/wnet_drive_auckland0_pl/config.cfg --dataset AUCKLAND_0 --device cuda:0

python generate_results.py --config_file experiments/wnet_drive_auckland50_pl/config.cfg --dataset DRIVE --device cuda:0
python generate_results.py --config_file experiments/wnet_drive_auckland50_pl/config.cfg --dataset AUCKLAND_50 --device cuda:0

python generate_results.py --config_file experiments/wnet_drive_auckland100_pl/config.cfg --dataset DRIVE --device cuda:0
python generate_results.py --config_file experiments/wnet_drive_auckland100_pl/config.cfg --dataset AUCKLAND_100 --device cuda:0

python generate_results.py --config_file experiments/wnet_drive_auckland150_pl/config.cfg --dataset DRIVE --device cuda:0
python generate_results.py --config_file experiments/wnet_drive_auckland150_pl/config.cfg --dataset AUCKLAND_150 --device cuda:0

- Evaluating performance on all other datasets:

python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive --path_test_preds results/DRIVE/experiments/wnet_drive_drive_pl --train_dataset DRIVE --test_dataset DRIVE

python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive --path_test_preds results/CHASEDB/experiments/wnet_drive_chasedb_pl --train_dataset DRIVE --test_dataset CHASEDB

python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive_hrf_pl --path_test_preds results/HRF/experiments/wnet_drive_hrf_pl --train_dataset DRIVE --test_dataset HRF

python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive_stare_pl --path_test_preds results/STARE/experiments/wnet_drive_stare_pl --train_dataset DRIVE --test_dataset STARE

python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive_les_av_pl --path_test_preds results/LES-AV/experiments/wnet_drive_les_av_pl --train_dataset DRIVE --test_dataset LES-AV

python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive_dr_hagis_pl --path_test_preds results/DR-HAGIS/experiments/wnet_drive_dr_hagis_pl --train_dataset DRIVE --test_dataset DR-HAGIS

python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive_av_wide_pl --path_test_preds results/AV-WIDE/experiments/wnet_drive_av_wide_pl --train_dataset DRIVE --test_dataset AV-WIDE

python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive_iostar_pl --path_test_preds results/IOSTAR/experiments/wnet_drive_iostar_pl --train_dataset DRIVE --test_dataset IOSTAR

python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive_dridb_pl --path_test_preds results/DRIDB/experiments/wnet_drive_dridb_pl --train_dataset DRIVE --test_dataset DRIDB

python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive_auckland0_pl --path_test_preds results/AUCKLAND_0/experiments/wnet_drive_auckland0_pl --train_dataset DRIVE --test_dataset AUCKLAND_0

python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive_auckland50_pl --path_test_preds results/AUCKLAND_50/experiments/wnet_drive_auckland50_pl --train_dataset DRIVE --test_dataset AUCKLAND_50

python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive_auckland100_pl --path_test_preds results/AUCKLAND_100/experiments/wnet_drive_auckland100_pl --train_dataset DRIVE --test_dataset AUCKLAND_100

python analyze_results.py --path_train_preds results/DRIVE/experiments/wnet_drive_auckland150_pl  --path_test_preds results/AUCKLAND_150/experiments/wnet_drive_auckland150_pl --train_dataset DRIVE --test_dataset AUCKLAND_150



# Training A/V segmentation
1a) Train a model on a given dataset (DRIVE); this will store the model in experiments/big_wnet_drive_av 
python train_cyclical.py --csv_train data/DRIVE/train_av.csv --model_name big_wnet --cycle_len 40/50 --do_not_save False --save_path big_wnet_drive_av --device cuda:0 

1b) For training a model on HRF we use a larger resolution and adjust the batch size to be 4 via gradient accumulation so that it fits in a single GPU
python train_cyclical.py --csv_train data/HRF/train_av.csv --model_name big_wnet --cycle_len 40/50 --do_not_save False --save_path big_wnet_hrf_av --device cuda:0 
python train_cyclical.py --csv_train data/HRF/train_av.csv --model_name big_wnet --cycle_len 40/50 --do_not_save False --save_path big_wnet_hrf_av_1024 --im_size 1024 --batch_size 2 --grad_acc_steps 1 --device cuda:0

2a) Generate predictions on the test set (DRIVE) or on another dataset (LES-AV) with this model; this will store predictions at results/DRIVE/experiments/big_wnet_drive_av/DRIVE (or LES-AV)
python generate_av_results.py --config_file experiments/big_wnet_drive_av/config.cfg --dataset DRIVE --device cuda:0
python generate_av_results.py --config_file experiments/big_wnet_drive_av/config.cfg --dataset LES-AV --device cuda:0

2b) Generate predictions on the test set (HRF); this will store predictions at results/DRIVE/experiments/big_wnet_hrf_av
python generate_av_results.py --config_file experiments/big_wnet_hrf_av_1024/config.cfg --dataset HRF --im_size 1024 --device cuda:0

3) Analyze results: we use a notebook so far, will fix that
jupyter notebook (av_evaluation.ipynb)



# Ablation Experiment: W-Net against Big U-Net

python train_cyclical.py --csv_train data/DRIVE/train.csv --cycle_lens 20/50 --model_name big_unet --save_path big_unet_drive --device cuda:0
python generate_results.py --config_file experiments/big_unet_drive/config.cfg --dataset DRIVE --device cuda:0
python analyze_results.py --path_train_preds results/DRIVE/experiments/big_unet_drive --path_test_preds results/DRIVE/experiments/big_unet_drive --train_dataset DRIVE --test_dataset DRIVE

python train_cyclical.py --csv_train data/CHASEDB/train.csv --cycle_lens 40/50 --model_name big_unet --save_path big_unet_chasedb --device cuda:0
python generate_results.py --config_file experiments/big_unet_chasedb/config.cfg --dataset CHASEDB --device cuda:0
python analyze_results.py --path_train_preds results/CHASEDB/experiments/big_unet_chasedb --path_test_preds results/CHASEDB/experiments/big_unet_chasedb --train_dataset CHASEDB --test_dataset CHASEDB

python train_cyclical.py --csv_train data/HRF/train.csv --cycle_lens 30/50 --model_name big_unet --save_path big_unet_hrf_1024 --im_size 1024 --batch_size 2 --grad_acc_steps 1 --device cuda:0
python generate_results.py --config_file experiments/big_unet_hrf_1024/config.cfg --dataset HRF --im_size 1024 --device cuda:0
python analyze_results.py --path_train_preds results/HRF/experiments/big_unet_hrf_1024 --path_test_preds results/HRF/experiments/big_unet_hrf_1024 --train_dataset HRF --test_dataset HRF


# Training small unets (table 2)
python train_cyclical.py --csv_train data/DRIVE/train.csv --cycle_lens 20/50 --model_name unet --save_path unet_drive --device cuda:0
python generate_results.py --config_file experiments/unet_drive/config.cfg --dataset DRIVE --device cuda:0
python analyze_results.py --path_train_preds results/DRIVE/experiments/unet_drive --path_test_preds results/DRIVE/experiments/unet_drive --train_dataset DRIVE --test_dataset DRIVE

python train_cyclical.py --csv_train data/CHASEDB/train.csv --cycle_lens 40/50 --model_name unet --save_path unet_chasedb --device cuda:0
python generate_results.py --config_file experiments/unet_chasedb/config.cfg --dataset CHASEDB --device cuda:0
python analyze_results.py --path_train_preds results/CHASEDB/experiments/unet_chasedb --path_test_preds results/CHASEDB/experiments/unet_chasedb --train_dataset CHASEDB --test_dataset CHASEDB

python train_cyclical.py --csv_train data/HRF/train.csv --cycle_lens 30/50 --model_name unet --save_path unet_hrf_1024 --im_size 1024 --batch_size 2 --grad_acc_steps 1 --device cuda:0
python generate_results.py --config_file experiments/unet_hrf_1024/config.cfg --dataset HRF --im_size 1024 --device cuda:0
python analyze_results.py --path_train_preds results/HRF/experiments/unet_hrf_1024 --path_test_preds results/HRF/experiments/unet_hrf_1024 --train_dataset HRF --test_dataset HRF















